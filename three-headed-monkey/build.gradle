buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.9.+'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.2'
        classpath 'com.github.jcandksolutions.gradle:android-unit-test:1.0.+'
    }
}

apply plugin: 'android'
apply plugin: 'android-apt'


def getVersionCode = { ->
    def code = project.hasProperty('versionCode') ? versionCode.toInteger() : -1
    println "VersionCode is set to $code"
    return code
}

def getVersionName = { ->
    def code = getVersionCode
    def versionName = "0.1.$code"
    println "VersionName is set to $versionName"
    return versionName
}

android {
    compileSdkVersion 18
    buildToolsVersion "19.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 18
        packageName "net.three_headed_monkey"
        versionCode getVersionCode()
        versionName getVersionName()
        testPackageName "net.three_headed_monkey.test"
        testInstrumentationRunner "pl.polidea.instrumentation.PolideaInstrumentationTestRunner"
    }

    buildTypes {
        debug {
            versionNameSuffix "-debug"
        }
    }

    signingConfigs {
        debug {
            storeFile file(getRootDir().toString() + "/.debug-keystore")
            storePassword "changeit"
            keyPassword "changeit"
            keyAlias "AndroidDebug"
        }
    }
}

apply plugin: 'android-unit-test'

repositories {
    mavenCentral()
}

ext.androidAnnotationsVersion = '3.0.+';


dependencies {
//==================== Android Annotations =========
    apt "org.androidannotations:androidannotations:${androidAnnotationsVersion}"
    compile "org.androidannotations:androidannotations-api:${androidAnnotationsVersion}"
//===================================================
    compile "com.google.code.gson:gson:2.2.4"
    compile "com.android.support:support-v4:18.0.+"
//==================== Robolectric ==================
    testCompile 'junit:junit:4.10'
    testCompile 'org.robolectric:robolectric:2.1.+'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'com.squareup:fest-android:1.0.+'
//==================== So android studio sees these! Comment in on demand =
//    androidTestCompile 'junit:junit:4.10'
//    androidTestCompile 'org.robolectric:robolectric:2.1.+'
//    androidTestCompile 'org.hamcrest:hamcrest-all:1.3'
//    androidTestCompile 'com.squareup:fest-android:1.0.+'
//==================== Instrument Tests ==============
    androidTestCompile 'com.jayway.android.robotium:robotium-solo:4.3.+'
    androidTestCompile files('libs/the-missing-android-xml-junit-test-runner-release-1.3_2.jar')
}

if(project.hasProperty("jenkins")) {
    android.buildTypes.each { type ->
        type.packageNameSuffix = ".jenkins"
        type.versionNameSuffix = "-jenkins-$type.name"
    }
}

apt {
    arguments {
        androidManifestFile variant.processResources.manifestFile
        resourcePackageName android.defaultConfig.packageName
        // You can set optional annotation processing options here, like these commented options:
        // logLevel 'INFO'
        // logFile '/var/log/aa.log'
    }
}

task createFlashableZip(type: Zip) {
    from "build-files/flashable-zip"
    from("build/apk/three-headed-monkey-release-unsigned.apk") {
        into "system/app"
    }
    baseName "three-headed-monkey-release"
}


project.ext['src.java.dir'] = ['src/test/java']
project.ext['module.iml.file'] = "three-headed-monkey.iml"
apply from: 'https://raw.github.com/sababado/gradle-android-add-dir/master/gradle-android-add-dir.gradle'


//android.applicationVariants.all { variant ->
//    variant.addJavaSourceFoldersToModel file("src/test/java")
//}
